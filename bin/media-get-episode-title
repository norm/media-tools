#!/bin/bash

set -e

# shellcheck source=/dev/null
source $(which media)

summary_line "$*" 'lookup the name of a given TV episode'
help_text "$*" <<'EOF'
    Usage: media get-episode-title <series> <season> <episode>

    Look up the title of the named episode using `episodate.com`.

    Whilst this can be used manually, it is normally invoked
    automatically by `make-episode-dir`.
EOF


function get_episode_title {
    local -r show="$1"
    local -r season="$2"
    local -r episode="$3"
    local id

    id=$( lookup_tv_id "$show" )

    if [ -z "$id" ]; then
        # if no explicit ID, convert the name to a slug
        id=$(
            echo "$show" \
                | sed -e 's/[^[:alnum:]]/-/g' \
                | tr -s '-' \
                | tr '[:upper:]' '[:lower:]' \
                | sed -e 's/-$//'
        )
    fi

    local -r tmpfile=$( mktemp )
    curl -fs "https://www.episodate.com/api/show-details?q=${id}" > "$tmpfile"

    if [ "$(<"$tmpfile")" == '{"tvShow":[]}' ]; then
        exec >&2
        echo "No show found directly matching ID $id."
        echo 'Possible matches:'
        echo " >> curl -fs https://www.episodate.com/api/search?q=${id} | jq -r .tv_shows[] | { id: .id, slug: .permalink, name: .name }"
        echo ''
        curl -fs "https://www.episodate.com/api/search?q=${id}" \
                    | jq -r ".tv_shows[] | .id, .permalink, .name" \
                    | awk '
                            NR % 3 == 2 { permalink=$0 }
                            NR % 3 == 1 { id=$0 }
                            NR % 3 == 0 {
                                printf "  * %s\n    slug=%s id=%s\n\n",
                                    $0, permalink, id 
                            }
                        '
    else
        # shellcheck disable=SC2002
        cat "$tmpfile" \
            | jq -r "
                .tvShow.episodes[]
                    | select(.season == $season)
                    | select(.episode == $episode)
                    | .name
                "
    fi
}

get_episode_title "$@"
