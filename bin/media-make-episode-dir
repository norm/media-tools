#!/bin/bash

set -e

# shellcheck source=/dev/null
source $(which media)

is_sub "$*" false
summary_line "$*" 'something something tv episode directory'
help_text "$*" <<'EOF'
    Usage: media make-episode-dir <series> <season> <episode> [<title>]

    Creates a directory for the named episode of a TV series in the right
    format for use by `add-video`. If the episode's title is not provided, it
    will use `get-episode-title` to look it up. Tries to find the poster image
    to use in this order:

        $MEDIA_TV_BASE/<series>/Season <season>/poster.jpg
        $MEDIA_TV_BASE/<series>/poster.jpg
        $MEDIA_TV_BASE/posters/<series>.jpg
EOF


function sanitise_for_directory {
    local directory="$1"

    echo "$directory" \
        | sed -e 's/\// - /g' -e 's/:/ - /g' \
        | tr -s ' '
}

function make_directory {
    local -r show="$1"
    local -r season="$2"
    local -r episode="$3"
    local title="$4"

    if [ -z "$title" ]; then
        title=$( media-get-episode-title "$show" "$season" "$episode" )
        title=$( sanitise_for_directory "$title" )
        [ -z "$title" ] && title='___'
    fi

    dir=$(printf "%s - %dx%02d - %s" "$show" "$season" "$episode" "$title")
    echo "$dir"

    mkdir -p "$dir"

    # FIXME poster.png?
    if [ -f "$TV_BASE/$show/Season $season/poster.jpg" ]; then
      cp "$TV_BASE/$show/Season $season/poster.jpg" "$dir/poster.jpg"
    elif [ -f "$TV_BASE/$show/poster.jpg" ]; then
      cp "$TV_BASE/$show/poster.jpg" "$dir/poster.jpg"
    elif [ -f "$TV_BASE/posters/$show.jpg" ]; then
      cp "$TV_BASE/posters/$show.jpg" "$dir/poster.jpg"
    fi
}

if [ "$0" = "${BASH_SOURCE[0]}" ]; then
    make_directory "$@"
fi
