#!/bin/bash

reset="\e[0m"
bold="\e[1m"
red="\e[31m"

# default configuration
IGNORE_ITUNES=
CONVERT_DIR=/tmp
TRASH_DIR=
TV_BASE=/files/tv

# override config with file
[ -n "$MEDIA_CONFIG" ] \
    && source "$MEDIA_CONFIG"

# override with env, which takes precedence over file
IGNORE_ITUNES="${MEDIA_IGNORE_ITUNES:=$IGNORE_ITUNES}"
CONVERT_DIR="${MEDIA_CONVERT_DIR:=$CONVERT_DIR}"
TRASH_DIR="${MEDIA_TRASH_DIR:=$TRASH_DIR}"
TV_BASE="${MEDIA_TV_BASE:=$TV_BASE}"


function media_error {
    printf "${bold}${red}*** ${*}${reset}\n"
    exit 1
}

function show_configuration {
    echo "CONVERT_DIR=$CONVERT_DIR"
    echo "IGNORE_ITUNES=$IGNORE_ITUNES"
    echo "TRASH_DIR=$TRASH_DIR"
    echo "TV_BASE=$TV_BASE"
}

function media_lookup_atom {
    local file="$1"
    local atom="$2"

    # the perl invocation removes a unicode byte order mark character, which
    # is probably useful, but makes it really hard to grep things consistently
    AtomicParsley "$file" -t                \
        | perl -ne 's/^[^A]+//m; print;'    \
        | grep "Atom .${atom}."             \
        | cut -c23-
}

function summary_line {
    if [ "$1" = '--summary' ]; then
        echo "$2"
        exit
    fi
}

function list_available_commands {
    for command in $( compgen -c | grep '^media-' ); do
        printf '%16s  ' $( echo $command | cut -c7- )
        $command --summary
    done
}


if [ "$0" = "$BASH_SOURCE" ]; then
    # being run as a command, not sourced by another script
    case "$1" in
        ''|-h|--help)
            list_available_commands
            ;;

        show-config)
            show_configuration
            ;;
    esac
fi
